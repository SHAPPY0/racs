<html lang="en" xmlns="http://www.w3.org/1999/xhtml"> 
<head>
	<meta charset="utf-8"/>
	<meta name="viewport" content="width=device-width, initial-scale=1"/>
	<link rel="stylesheet" href="/bulma.min.css"/>
	<link rel="stylesheet" href="/bulmaswatch.min.css"/>
	<link rel="stylesheet" href="/css/all.min.css"/>
	<script src="/lib.js" type="text/javascript"/>
	<script src="/ansi_up.js" type="text/javascript"/>
	<link rel="apple-touch-icon" sizes="57x57" href="/apple-icon-57x57.png"/>
	<link rel="apple-touch-icon" sizes="60x60" href="/apple-icon-60x60.png"/>
	<link rel="apple-touch-icon" sizes="72x72" href="/apple-icon-72x72.png"/>
	<link rel="apple-touch-icon" sizes="76x76" href="/apple-icon-76x76.png"/>
	<link rel="apple-touch-icon" sizes="114x114" href="/apple-icon-114x114.png"/>
	<link rel="apple-touch-icon" sizes="120x120" href="/apple-icon-120x120.png"/>
	<link rel="apple-touch-icon" sizes="144x144" href="/apple-icon-144x144.png"/>
	<link rel="apple-touch-icon" sizes="152x152" href="/apple-icon-152x152.png"/>
	<link rel="apple-touch-icon" sizes="180x180" href="/apple-icon-180x180.png"/>
	<link rel="icon" type="image/png" sizes="192x192"  href="/android-icon-192x192.png"/>
	<link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png"/>
	<link rel="icon" type="image/png" sizes="96x96" href="/favicon-96x96.png"/>
	<link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png"/>
	<link rel="manifest" href="/manifest.json"/>
	<meta name="msapplication-TileColor" content="#ffffff"/>
	<meta name="msapplication-TileImage" content="/ms-icon-144x144.png"/>
	<meta name="theme-color" content="#ffffff"/>
</head>
<body class="has-background-warning-light" style="min-height:100vh;padding:0;">
	<div class="modal" id="create">
		<div class="modal-background"/>
		<form class="modal-card" action="/credential/create" method="POST">
			<header class="modal-card-head">
				<p class="modal-card-title">Create Credential</p>
				<button class="delete" aria-label="close" onclick="hideCreate()" type="reset"/>
			</header>
			<section class="modal-card-body">
				<input type="hidden" name="redirect" value="/credentials.xhtml"/>
				<div class="field">
					<label class="label">Description</label>
					<div class="control">
						<input class="input" name="description"/>
					</div>
				</div>
				<div class="field">
					<label class="label">Value</label>
					<div class="control">
						<input class="input" type="password" name="value"/>
					</div>
				</div>
			</section>
			<footer class="modal-card-foot">
				<span style="flex:1 1;"/>
				<button class="button" onclick="hideCreate()" type="reset">Cancel</button>
				<button class="button is-primary" type="submit">Create</button>
			</footer>
		</form>
	</div>
	<div class="modal" id="settings">
		<div class="modal-background"/>
		<form class="modal-card" action="/credential/update" method="POST">
			<header class="modal-card-head">
				<p class="modal-card-title">Update Credential</p>
				<button class="delete" aria-label="close" onclick="hideCredentialSettings()" type="reset"/>
			</header>
			<section class="modal-card-body">
				<input type="hidden" name="redirect" value="/credentials.xhtml"/>
				<input type="hidden" name="id" id="update_id" value=""/>
				<div class="field">
					<label class="label">Description</label>
					<div class="control">
						<input class="input" name="description" id="update_description"/>
					</div>
				</div>
				<div class="field">
					<label class="label">Value</label>
					<div class="control">
						<input class="input" type="password" name="value" id="update_value"/>
					</div>
				</div>
			</section>
			<footer class="modal-card-foot">
				<span style="flex:1 1;"/>
				<button class="button" onclick="hideSettings()" type="reset">Cancel</button>
				<button class="button is-primary" type="submit">Update</button>
			</footer>
		</form>
	</div>
	<div class="modal" id="login">
		<div class="modal-background"/>
		<form class="modal-card" action="/user/login" method="POST">
			<header class="modal-card-head">
				<p class="modal-card-title">Login</p>
				<button class="delete" aria-label="close" type="reset"/>
			</header>
			<section class="modal-card-body">
				<input type="hidden" name="redirect" value="/credentials.xhtml"/>
				<div class="field">
					<label class="label">User Name</label>
					<div class="control">
						<input class="input" name="username"/>
					</div>
				</div>
				<div class="field">
					<label class="label">Password</label>
					<div class="control">
						<input class="input" type="password" name="password"/>
					</div>
				</div>
			</section>
			<footer class="modal-card-foot">
				<span style="flex:1 1;"/>
				<button class="button" onclick="hideLogin()" type="reset">Cancel</button>
				<button class="button is-primary" type="submit">Login</button>
			</footer>
		</form>
	</div>
	<div class="modal" id="logout">
		<div class="modal-background"/>
		<form class="modal-card" action="/user/logout" method="POST">
			<input type="hidden" name="redirect" value="/credentials.xhtml"/>
			<header class="modal-card-head">
				<p class="modal-card-title">Login</p>
				<button class="delete" aria-label="close" type="reset"/>
			</header>
			<footer class="modal-card-foot">
				<span style="flex:1 1;"/>
				<button class="button" onclick="hideLogout()" type="reset">Cancel</button>
				<button class="button is-primary" type="submit">Logout</button>
			</footer>
		</form>
	</div>
	<nav class="navbar is-radiusless" role="navigation" aria-label="main navigation" style="position:sticky;top:0">
		<div class="navbar-brand">
			<a class="navbar-item" href="/">
				<img src="/favicon-96x96.png"/>
				<span class="is-size-4 ml-2 has-text-info has-text-weight-bold is-family-code">RACS</span>
			</a>
			<a class="navbar-item is-tab" href="/">Projects</a>
			<a class="navbar-item is-tab is-active" href="/credentials.xhtml">Credentials</a>
			<a class="navbar-item is-tab" href="/registries.xhtml">Registries</a>
			<a class="navbar-item is-tab" href="/tasks.xhtml">Tasks</a>
			<a role="button" class="navbar-burger" aria-label="menu" aria-expanded="false" id="navbar-burger">
				<span aria-hidden="true"></span>
				<span aria-hidden="true"></span>
				<span aria-hidden="true"></span>
			</a>
		</div>
		<div class="navbar-menu" id="navbar-menu">
			<div class="navbar-end">
				<div class="navbar-item" id="out-actions" style="display:none;">
					<div class="buttons">
						<button class="button is-small is-primary" onclick="showLogin()">Login</button>
					</div>
				</div>
				<div class="navbar-item" id="in-actions" style="display:none;">
					<div class="buttons">
						<button class="button is-small" onclick="showCreate()">Create Credential</button>
						<button class="button is-small is-danger" onclick="showLogout()">Logout</button>
					</div>
				</div>
			</div>
		</div>
	</nav>
	<div style="display:flex;flex-wrap:wrap;" id="credentials"/>
	<script type="text/javascript">
		let burger = document.getElementById("navbar-burger");
		burger.onclick = function(event) {
			let menu = document.getElementById("navbar-menu");
			burger.classList.toggle("is-active");
			menu.classList.toggle("is-active");
		}
		function showCreate() {
			var modal = document.getElementById("create");
			modal.addClass("is-active");
		}
		
		function hideCreate() {
			var modal = document.getElementById("create");
			modal.removeClass("is-active");
		}

		function showSettings() {
			document.getElementById("update_id").value = this.id;
			document.getElementById("update_description").value = this.description;
			document.getElementById("update_value").value = "";
			var modal = document.getElementById("settings");
			modal.addClass("is-active");
		}

		function hideSettings() {
			var modal = document.getElementById("settings");
			modal.removeClass("is-active");
		}
		
		function showLogin() {
			var modal = document.getElementById("login");
			modal.addClass("is-active");
		}
		
		function hideLogin() {
			var modal = document.getElementById("login");
			modal.removeClass("is-active");
		}
		
		function showLogout() {
			var modal = document.getElementById("logout");
			modal.addClass("is-active");
		}
		
		function hideLogout() {
			var modal = document.getElementById("logout");
			modal.removeClass("is-active");
		}
		
		var container = document.getElementById("credentials");
		var credentials = [];

		function updateCredential(result) {
			var credential = credentials[result.id];
			if (!credential) {
				credential = credentials[result.id] = {};
				credential.description = result.description;
				var card = create("div.card.p-1.m-1.is-flex.is-flex-wrap-nowrap",
					{style: "flex-grow: 1; flex-basis: 0;"},
					create("span.is-flex-grow-1", {style: "display:inline-block"},
						create("div.mb-2.has-text-weight-bold.is-size-6", result.description),
						create("div",
							create("button.button.is-small", {"on-click": showSettings.bind(result)},
								create("span.icon", create("i.fas.fa-tools"))
							)
						)
					)
				);
				container.appendChild(card);
			}
		}
		
		var events = null;
		var fetchInterval = setInterval(fetchConfig, 1000);
		fetchConfig();

		function connectEvents() {
			events = new EventSource("/events");
			events.onopen = function() {
				console.log("Events opened, clearing interval");
				if (fetchInterval !== null) {
					clearInterval(fetchInterval);
					fetchInterval = null;
				}
			}
			events.onmessage = function(e) {
				var event = JSON.parse(e.data);
				console.log(event);
				switch (event.event) {
				case "project/list":
					//event.projects.forEach(updateProject);
					break;
				case "project/create":
				case "project/state":
				case "project/version":
					//updateProject(event);
					break;
				case "task/create":
				case "task/state": {
					//var project = projects[event.project];
					//if (project) updateTask(project, event);
					break;
				}
				}
			}
			events.onerror = function() {
				events = null;
				if (fetchInterval === null) {
					fetchInterval = setInterval(fetchConfig, 1000);
				}
			}
		}
		
		function fetchConfig() {
			fetch("/project/list").then(response => response.json()).then(results => {
				//results.forEach(updateProject);
			});
			fetch("/credential/list").then(response => response.json()).then(results => {
				results.forEach(updateCredential);
				if (events === null) connectEvents();
			});
		}
		
		fetch("/user/current").then(response => response.text()).then(name => {
			console.log("User = ", name);
			var inActions = document.getElementById("in-actions");
			var outActions = document.getElementById("out-actions");
			if (name) {
				inActions.style.display = null;
				outActions.style.display = "none";
			} else {
				inActions.style.display = "none";
				outActions.style.display = null;
			}
		});		
	</script>
</body>
</html>
